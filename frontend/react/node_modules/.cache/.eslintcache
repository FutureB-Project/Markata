[{"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\index.js":"1","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\App.js":"2","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\HomeScreen.js":"3","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\LoginScreen.js":"4","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\CartScreen.js":"5","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SignupScreen.js":"6","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SuccessVerificationPage.js":"7","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\UserActivateScreen.js":"8","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SuccessRegistration.js":"9","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\ErrorBoundary.js":"10","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\Modal.js":"11","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\api\\link.js":"12","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\Navbar.js":"13"},{"size":276,"mtime":1698685717955,"results":"14","hashOfConfig":"15"},{"size":2286,"mtime":1698698880651,"results":"16","hashOfConfig":"15"},{"size":179,"mtime":1698698880709,"results":"17","hashOfConfig":"15"},{"size":3128,"mtime":1698685717952,"results":"18","hashOfConfig":"15"},{"size":128,"mtime":1698685717944,"results":"19","hashOfConfig":"15"},{"size":7984,"mtime":1698685717955,"results":"20","hashOfConfig":"15"},{"size":680,"mtime":1698685717955,"results":"21","hashOfConfig":"15"},{"size":6376,"mtime":1698685717955,"results":"22","hashOfConfig":"15"},{"size":775,"mtime":1698685717955,"results":"23","hashOfConfig":"15"},{"size":712,"mtime":1698685717952,"results":"24","hashOfConfig":"15"},{"size":2380,"mtime":1698685717952,"results":"25","hashOfConfig":"15"},{"size":186,"mtime":1698685717944,"results":"26","hashOfConfig":"15"},{"size":2643,"mtime":1698717709836,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1tczb7r",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\index.js",[],[],["73"],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\App.js",["74","75"],[],"import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport SignupScreen from \"./SignupScreen\";\r\nimport HomeScreen from \"./HomeScreen\";\r\nimport CartScreen from \"./CartScreen\";\r\nimport UserActivateScreen from \"./UserActivateScreen\";\r\nimport SuccessVerificationPage from \"./SuccessVerificationPage\";\r\nimport SuccessRegistration from \"./SuccessRegistration\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <ErrorBoundary>\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginScreen />} />\r\n            <Route path=\"/signup\" element={<SignupScreen />} />\r\n            <Route path=\"/\" element={<HomeScreen />} />\r\n            <Route path=\"/cart\" element={<CartScreen />} />\r\n            <Route\r\n              path=\"/users/activate-account\"\r\n              element={<UserActivateScreen />}\r\n            />\r\n            <Route\r\n              path=\"/SuccessVerificationPage\"\r\n              element={<SuccessVerificationPage />}\r\n            />\r\n\r\n            <Route\r\n              path=\"/SuccessRegistration\"\r\n              element={<SuccessRegistration />}\r\n            />\r\n          </Routes>\r\n        </ErrorBoundary>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n{\r\n  /* <div className=\"App\">\r\n<Router>\r\n{currentForm === \"login\" ? (\r\n  <LoginScreen onFormSwitch={toggleForm} />\r\n) : (\r\n  <SignupScreen onFormSwitch={toggleForm} />\r\n)}\r\n\r\n<Routes>\r\n<Route path=\"/home\" element={<HomeScreen/>} />\r\n<Route path=\"/cart\" element={<CartScreen/>} />\r\n</Routes>\r\n\r\n</Router>\r\n</div> */\r\n}\r\n\r\n{\r\n  /* <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n          {currentForm === \"login\" ? (\r\n            <Route\r\n              path=\"/login\"\r\n              element={<LoginScreen onFormSwitch={toggleForm} />}\r\n            />\r\n          ) : (\r\n            <Route\r\n              path=\"/signup\"\r\n              element={<SignupScreen onFormSwitch={toggleForm} />}\r\n            />\r\n          )}\r\n\r\n          <Route path=\"/home\" element={<HomeScreen />} />\r\n          <Route path=\"/cart\" element={<CartScreen />} />\r\n        </Routes>\r\n      </Router>\r\n    </div> */\r\n}\r\n","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\HomeScreen.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\LoginScreen.js",["76","77","78","79","80","81"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./logo.png\";\r\nimport api from \"../api/link\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginScreen(props) {\r\n  //change path\r\n  const navigate = useNavigate();\r\n\r\n  const changePath = (path) => {\r\n    // navigate to path\r\n    navigate(path);\r\n  };\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n  const [isEmpty, setEmpty] = useState(false);\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [truthy, setTruthy] = useState();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    if (!email) {\r\n      setEmpty(true);\r\n    }\r\n    console.log(email);\r\n\r\n    const post = {\r\n      emailId: email,\r\n      password: password,\r\n    };\r\n    try {\r\n      const response = await api.post(\"/login\", post);\r\n      setTruthy(false);\r\n      console.log(\"-- \" + JSON.stringify(response) + \" --\");\r\n      //TODO: After successful signup user goes to home page\r\n      // Navigate to Home\r\n      if (response.status == 200) {\r\n        changePath(\"/\");\r\n      }\r\n    } catch (err) {\r\n      setTruthy(true);\r\n      console.log(\"truthy \" + truthy);\r\n      // setMsg(err.response.data);\r\n      setMsg(\"Error happened\");\r\n      console.log(\"msg \" + msg);\r\n      console.log(`Error: ${err.response.data}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Markata</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account?{\" \"}\r\n        <span className=\"link-btn\" onClick={() => changePath(\"/signup\")}>\r\n          Signup here\r\n          {/* <Link to=\"/signup\"> Signup here </Link> */}\r\n        </span>\r\n      </p>{\" \"}\r\n      {/* <Link to=\"/cart\"> Cart </Link> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\CartScreen.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SignupScreen.js",["82","83","84","85","86","87"],[],"import React, { useState, useEffect } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport Modal from \"./Modal\";\r\nimport api, { baseAPI } from \"../api/link\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SuccessRegistration from \"./SuccessRegistration\";\r\n\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction SignupScreen(props) {\r\n  const navigate = useNavigate();\r\n  const changePath = (path) => {\r\n    // navigate to path\r\n    navigate(path);\r\n  };\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n  const [isEmpty, setEmpty] = useState(false);\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [truthy, setTruthy] = useState();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const successRegistration = (SuccessRegistration) => {\r\n    setTimeout(() => {\r\n      navigate(SuccessRegistration);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    if (!email) {\r\n      setEmpty(true);\r\n    }\r\n    console.log(fName);\r\n    console.log(lName);\r\n    console.log(password);\r\n    console.log(email);\r\n    console.log(date);\r\n    let year = date.split(/-/)[0];\r\n    let month = date.split(/-/)[1];\r\n    let date_num = date.split(/-/)[2];\r\n    console.log(date_num);\r\n    console.log(year);\r\n    console.log(month);\r\n    const post = {\r\n      firstName: fName,\r\n      lastName: lName,\r\n      emailId: email,\r\n      password: password,\r\n      month: month,\r\n      date: date_num,\r\n      year: year,\r\n    };\r\n    console.log(\"password strenght \" + strength);\r\n    if (strength < 74) {\r\n      setTruthy(true);\r\n      setMsg(\r\n        \"Password too weak. Please include numbers, Capital letters and more than 8 characters.\"\r\n      );\r\n      return;\r\n    }\r\n    try {\r\n      setTruthy(false);\r\n      const response = await api.post(\"/users\", post);\r\n      console.log(\"-- \" + JSON.stringify(response) + \" --\");\r\n      //TODO: After successful signup user goes to login page\r\n      if (response.status == 200) {\r\n        changePath(\"/SuccessRegistration\");\r\n      }\r\n    } catch (err) {\r\n      // errorUserExist(err.response.data);\r\n      setTruthy(true);\r\n      console.log(\"truthy \" + truthy);\r\n      // setMsg(err.response.data);\r\n\r\n      if (err.response.status == 409) {\r\n        setMsg(err.response.data);\r\n        console.log(\"msg \" + msg);\r\n        console.log(`Error: ${err.response.data}`);\r\n      } else {\r\n        setMsg(\"Error happened. Please try again\");\r\n        console.log(\"msg \" + msg);\r\n        console.log(`Error: ${err.response.data}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // function errorUserExist(msg) {\r\n  //   msg = msg.split(/./)[0];\r\n  //   console.log(\"inside error\" + msg);\r\n  //   const truthy = true;\r\n  // }\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(email);\r\n  // };\r\n\r\n  const calculateStrength = (password) => {\r\n    const lengthScore = Math.min(password.length / 8, 1); // Normalize the length score\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    const hasLowerCase = /[a-z]/.test(password);\r\n    const hasNumber = /[0-9]/.test(password);\r\n    const hasSpecialChar = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-]/.test(password);\r\n\r\n    const complexityScore =\r\n      (hasUpperCase + hasLowerCase + hasNumber + hasSpecialChar) / 4;\r\n\r\n    const strengthPercentage = ((lengthScore + complexityScore) / 2) * 100;\r\n    return strengthPercentage;\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n    const strengthPercentage = calculateStrength(newPassword);\r\n    setStrength(strengthPercentage);\r\n  };\r\n\r\n  const getPasswordColor = () => {\r\n    if (strength < 25) {\r\n      return \"red\";\r\n    } else if (strength < 50) {\r\n      return \"orange\";\r\n    } else if (strength < 75) {\r\n      return \"#F3D421\";\r\n    } else {\r\n      return \"lightgreen\";\r\n    }\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n  };\r\n  // Terms and conditions\r\n  const [terms, setTerms] = useState(null);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const apiUrl = baseAPI + \"/Terms/1\";\r\n      try {\r\n        const response = await axios.get(apiUrl);\r\n        console.log(response.data.terms);\r\n        setTerms(response.data.terms);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    // Call the async function\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Markata</h1>\r\n      </div>\r\n      <h2>Signup</h2>\r\n      <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"fName lName\">Full Name</label>\r\n        <div className=\"side-by-side\">\r\n          <input\r\n            value={fName}\r\n            name=\"fName\"\r\n            onChange={(e) => setFName(e.target.value)}\r\n            id=\"fName\"\r\n            placeholder=\"Enter first name\"\r\n            required\r\n            className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n          />\r\n          <input\r\n            value={lName}\r\n            name=\"lName\"\r\n            onChange={(e) => setLName(e.target.value)}\r\n            id=\"lName\"\r\n            placeholder=\"Enter last name\"\r\n            required\r\n            className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n          />\r\n        </div>\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          data-testid=\"password\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        <div\r\n          className=\"password-strength-bar\"\r\n          style={{\r\n            width: `${strength}%`,\r\n            maxWidth: \"150%\",\r\n            backgroundColor: getPasswordColor(),\r\n          }}\r\n        ></div>\r\n        <label htmlFor=\"date\">Date of Birth</label>\r\n        <input\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          type=\"date\"\r\n          id=\"date\"\r\n          name=\"date\"\r\n          data-testid=\"date\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n\r\n        {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\r\n\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            required\r\n          />{\" \"}\r\n          Agree the terms and conditions.{\" \"}\r\n          <span className=\"link-btn\" onClick={() => setIsOpen(true)}>\r\n            Read Here\r\n          </span>\r\n          <div>\r\n            <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n              {terms}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Signup</button>\r\n      </form>\r\n      <p>\r\n        Already have an account?{\" \"}\r\n        <span className=\"link-btn\" onClick={() => changePath(\"/login\")}>\r\n          Login here\r\n          {/* <Link to=\"/login\"> Login here </Link> */}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupScreen;\r\n","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SuccessVerificationPage.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\UserActivateScreen.js",["88","89"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport api from \"../api/link\";\r\nimport logo from \"./logo.png\";\r\n\r\n// function UserActivateScreen() {\r\n//   // const { truthy, setTruthy } = useState(false);\r\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\r\n//   // token\r\n//   const location = useLocation();\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   // Access specific query parameters\r\n//   const token = searchParams.get(\"token\");\r\n//   //   setToken(receivedToken);\r\n//   console.log(\"Outside try   \" + token);\r\n//   try {\r\n//     const url = `http://localhost:8080/users/activate-account?token=${token}`;\r\n\r\n//     // api\r\n//     //   .get(url)\r\n//     //   .then(function (response) {\r\n//     //     setTruthy(false);\r\n//     //     console.log(response);\r\n//     //     console.log(\"-- \" + JSON.stringify(response) + \" --\");\r\n//     //     changePath(\"/SuccessRegistration\");\r\n//     //     return;\r\n//     //   })\r\n//     //   .catch((err) => {\r\n//     //     setTruthy(true);\r\n//     //     console.log(\"truthy \" + truthy);\r\n//     //     // setMsg(err.response.data);\r\n//     //     setMsg(err.response.data);\r\n//     //     console.log(\"msg \" + msg);\r\n//     //     console.log(`Error: ${err.response.data}`);\r\n//     //     console.log(err.response);\r\n//     //   });\r\n\r\n//     api\r\n//       .get(\"/users/activate-account\", {\r\n//         params: {\r\n//           token: token,\r\n//         },\r\n//         // token: \"http://localhost:8080/users/activate-account?token=\" + token,\r\n//         // token: token,\r\n//       })\r\n//       .then((data) => {\r\n//         setTruthy(false);\r\n//         console.log(\"This is the response: \" + data);\r\n//         // console.log(\"-- \" + JSON.stringify(data) + \" --\");\r\n//         console.log(data.status);\r\n//         if (data.status === 200) {\r\n//           changePath(\"SuccessRegistration\");\r\n//         }\r\n//         return;\r\n//       })\r\n//       .catch((err) => {\r\n//         setTruthy(true);\r\n//         console.log(\"truthy \" + truthy);\r\n//         // setMsg(err.response.data);\r\n//         setMsg(err.response.data);\r\n//         console.log(\"msg \" + msg);\r\n//         console.log(`Error: ${err.response.data}`);\r\n//         console.log(err.response);\r\n//       });\r\n//   } catch (error) {\r\n//     // Handle any other errors that occur outside of the API request\r\n//     console.error(\"Last error\" + error);\r\n//   }\r\n//   console.log(\"After try  \" + token);\r\n\r\n//   //change path\r\n//   const navigate = useNavigate();\r\n//   const changePath = (path) => {\r\n//     setTimeout(() => {\r\n//       navigate(path);\r\n//     }, 9000);\r\n//   };\r\n\r\n//   const [truthy, setTruthy] = useState();\r\n//   const [msg, setMsg] = useState(\"\");\r\n\r\n//   return (\r\n//     <div className=\"auth-form-container\">\r\n//       <div className=\"logo\">\r\n//         <img src={logo} alt=\"logo\" />\r\n//         <h1>Markata</h1>\r\n//       </div>\r\n//       <h2>Thank you for starting the activation process...</h2>\r\n\r\n//       {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\r\n//     </div>\r\n//   );\r\n// }\r\n// const UserActivateScreen = async () => {\r\n//   // const [truthy, setTruthy] = useState(true);\r\n//   // const [msg, setMsg] = useState(\"Processing.....\");\r\n//   // const { truthy, setTruthy } = useState(false);\r\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\r\n//   // token\r\n//   // let msg = \"jkl\";\r\n//   const location = useLocation();\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   // Access specific query parameters\r\n//   const token = searchParams.get(\"token\");\r\n//   //   setToken(receivedToken);\r\n//   console.log(\"Before   \" + token);\r\n//   try {\r\n//     // setTruthy(truthy ? false : true);\r\n//     const response = await api.get(\"/users/activate-account\", {\r\n//       params: {\r\n//         token: token,\r\n//       },\r\n//     });\r\n//     console.log(response);\r\n//     if (response.status == 200) {\r\n//       changePath(\"/login\");\r\n//     }\r\n//   } catch (err) {\r\n//     // Handle any other errors that occur outside of the API request\r\n//     // setTruthy(truthy ? false : true);\r\n//     // setMsg(err.response.data);\r\n//     // msg = err.response.data;\r\n//     console.error(\"Last error\" + err.response);\r\n//   }\r\n//   console.log(\"After   \" + token);\r\n\r\n//   //change path\r\n//   const navigate = useNavigate();\r\n//   const changePath = (path) => {\r\n//     setTimeout(() => {\r\n//       navigate(path);\r\n//     }, 2000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-form-container\">\r\n//       <div className=\"logo\">\r\n//         <img src={logo} alt=\"logo\" />\r\n//         <h1>Markata</h1>\r\n//       </div>\r\n//       <h2>Thank you for starting the activation process...</h2>\r\n\r\n//       {/* {true ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>} */}\r\n//     </div>\r\n//   );\r\n// };\r\nconst UserActivateScreen = () => {\r\n  const [msg, setMsg] = useState(\"\"); // Initialize msg as an empty string\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const token = searchParams.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    async function activateAccount() {\r\n      try {\r\n        const response = await api.get(\"/users/activate-account\", {\r\n          params: {\r\n            token: token,\r\n          },\r\n        });\r\n        // console.log(response);\r\n        console.log(\"No error\");\r\n        if (response.status === 200) {\r\n          changePath(\"/SuccessVerificationPage\");\r\n        }\r\n        return;\r\n      } catch (err) {\r\n        // console.log(err);\r\n        setMsg(err.response.data); // Set msg to the error message\r\n        // console.error(\"Last error\", err.response);\r\n      }\r\n    }\r\n\r\n    activateAccount(); // Call the async function when the component is mounted\r\n  }, [token]); // Call activateAccount whenever the token changes\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const changePath = (path) => {\r\n    setTimeout(() => {\r\n      navigate(path);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Markata</h1>\r\n      </div>\r\n      <h2>Account will be activated</h2>\r\n      {/* {msg && <p style={{ color: \"red\" }}>{msg}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserActivateScreen;\r\n","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\SuccessRegistration.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\ErrorBoundary.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\Modal.js",["90"],[],"import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nconst MODAL_STYLES = {\r\n  width: \"40%\",\r\n  height: \"60%\",\r\n  overflow: \"auto\",\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  backgroundColor: \"#FFF\",\r\n  padding: \"50px\",\r\n  borderRadius: \"7px\",\r\n  zIndex: 1000,\r\n};\r\n\r\nconst OVERLAY_STYLES = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(0, 0, 0, .7)\",\r\n  zIndex: 1000,\r\n};\r\n\r\nconst test = {\r\n  width: \"80%\",\r\n  height: \"70%\",\r\n  overflow: \"auto\",\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  backgroundColor: \"#FFF\",\r\n  padding: \"50px\",\r\n  borderRadius: \"7px\",\r\n  zIndex: 1000,\r\n};\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null;\r\n\r\n  return ReactDom.createPortal(\r\n    // <>\r\n    //   <div style={test}>\r\n    //     {children}\r\n    //     <br />\r\n    //     <button className=\"btn-modal\" onClick={onClose}>\r\n    //       Close\r\n    //     </button>\r\n    //   </div>\r\n    // </>,\r\n    <>\r\n      <div style={OVERLAY_STYLES} />\r\n      <div style={MODAL_STYLES}>\r\n        <h2>Terms and Conditions</h2>\r\n        {children}\r\n        <br />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <button className=\"btn-modal\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>,\r\n\r\n    // <>\r\n    //   <div\r\n    //     class=\"modal fade\"\r\n    //     id=\"exampleModalScrollable\"\r\n    //     tabindex=\"-1\"\r\n    //     role=\"dialog\"\r\n    //     aria-labelledby=\"exampleModalScrollableTitle\"\r\n    //     aria-hidden=\"true\"\r\n    //   >\r\n    //     <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\r\n    //       <div class=\"modal-content\">\r\n    //         <div class=\"modal-header\">\r\n    //           <h5 class=\"modal-title\" id=\"exampleModalScrollableTitle\">\r\n    //             Terms and Conditions\r\n    //           </h5>\r\n    //         </div>\r\n    //         {children}\r\n    //         <br />\r\n    //         <div style={{ textAlign: \"center\" }}>\r\n    //           <button className=\"btn-modal\" onClick={onClose}>\r\n    //             Close\r\n    //           </button>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // </>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\n","C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\api\\link.js",[],[],"C:\\Users\\henos\\Desktop\\React code\\Markata\\frontend\\react\\src\\components\\Navbar.js",["91","92","93","94"],[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":45,"column":1,"nodeType":"99","messageId":"100","endLine":61,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":63,"column":1,"nodeType":"99","messageId":"100","endLine":84,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":22,"column":10,"nodeType":"103","messageId":"104","endLine":22,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":22,"column":16,"nodeType":"103","messageId":"104","endLine":22,"endColumn":23},{"ruleId":"101","severity":1,"message":"107","line":26,"column":10,"nodeType":"103","messageId":"104","endLine":26,"endColumn":20},{"ruleId":"101","severity":1,"message":"108","line":26,"column":22,"nodeType":"103","messageId":"104","endLine":26,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":46,"column":27,"nodeType":"111","messageId":"112","endLine":46,"endColumn":29},{"ruleId":"101","severity":1,"message":"102","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"101","severity":1,"message":"113","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":27},{"ruleId":"101","severity":1,"message":"114","line":37,"column":9,"nodeType":"103","messageId":"104","endLine":37,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":82,"column":27,"nodeType":"111","messageId":"112","endLine":82,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":91,"column":31,"nodeType":"111","messageId":"112","endLine":91,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":119,"column":44,"nodeType":"117","messageId":"118","endLine":119,"endColumn":45,"suggestions":"119"},{"ruleId":"101","severity":1,"message":"120","line":148,"column":10,"nodeType":"103","messageId":"104","endLine":148,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":175,"column":6,"nodeType":"123","endLine":175,"endColumn":13,"suggestions":"124"},{"ruleId":"101","severity":1,"message":"125","line":28,"column":7,"nodeType":"103","messageId":"104","endLine":28,"endColumn":11},{"ruleId":"126","severity":1,"message":"127","line":21,"column":15,"nodeType":"128","endLine":24,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":29,"column":15,"nodeType":"128","endLine":32,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":37,"column":15,"nodeType":"128","endLine":40,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":45,"column":15,"nodeType":"128","endLine":48,"endColumn":16},"no-new-object",["129"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'errorEmail' is assigned a value but never used.","'setErrorEmail' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SuccessRegistration' is defined but never used.","'successRegistration' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["130","131"],"'msg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changePath'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'test' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-object-constructor",{"messageId":"133","fix":"134","desc":"135"},{"messageId":"136","fix":"137","desc":"138"},{"desc":"139","fix":"140"},"removeEscape",{"range":"141","text":"142"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"143","text":"144"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [changePath, token]",{"range":"145","text":"146"},[3544,3545],"",[3544,3544],"\\",[5843,5850],"[changePath, token]"]