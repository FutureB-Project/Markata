{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henos\\\\Desktop\\\\React code\\\\Markata\\\\frontend\\\\react\\\\src\\\\components\\\\UserActivateScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport api from \"../api/link\";\nimport logo from \"./logo.png\";\n\n// function UserActivateScreen() {\n//   // const { truthy, setTruthy } = useState(false);\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\n//   // token\n//   const location = useLocation();\n//   const searchParams = new URLSearchParams(location.search);\n//   // Access specific query parameters\n//   const token = searchParams.get(\"token\");\n//   //   setToken(receivedToken);\n//   console.log(\"Outside try   \" + token);\n//   try {\n//     const url = `http://localhost:8080/users/activate-account?token=${token}`;\n\n//     // api\n//     //   .get(url)\n//     //   .then(function (response) {\n//     //     setTruthy(false);\n//     //     console.log(response);\n//     //     console.log(\"-- \" + JSON.stringify(response) + \" --\");\n//     //     changePath(\"/SuccessRegistration\");\n//     //     return;\n//     //   })\n//     //   .catch((err) => {\n//     //     setTruthy(true);\n//     //     console.log(\"truthy \" + truthy);\n//     //     // setMsg(err.response.data);\n//     //     setMsg(err.response.data);\n//     //     console.log(\"msg \" + msg);\n//     //     console.log(`Error: ${err.response.data}`);\n//     //     console.log(err.response);\n//     //   });\n\n//     api\n//       .get(\"/users/activate-account\", {\n//         params: {\n//           token: token,\n//         },\n//         // token: \"http://localhost:8080/users/activate-account?token=\" + token,\n//         // token: token,\n//       })\n//       .then((data) => {\n//         setTruthy(false);\n//         console.log(\"This is the response: \" + data);\n//         // console.log(\"-- \" + JSON.stringify(data) + \" --\");\n//         console.log(data.status);\n//         if (data.status === 200) {\n//           changePath(\"SuccessRegistration\");\n//         }\n//         return;\n//       })\n//       .catch((err) => {\n//         setTruthy(true);\n//         console.log(\"truthy \" + truthy);\n//         // setMsg(err.response.data);\n//         setMsg(err.response.data);\n//         console.log(\"msg \" + msg);\n//         console.log(`Error: ${err.response.data}`);\n//         console.log(err.response);\n//       });\n//   } catch (error) {\n//     // Handle any other errors that occur outside of the API request\n//     console.error(\"Last error\" + error);\n//   }\n//   console.log(\"After try  \" + token);\n\n//   //change path\n//   const navigate = useNavigate();\n//   const changePath = (path) => {\n//     setTimeout(() => {\n//       navigate(path);\n//     }, 9000);\n//   };\n\n//   const [truthy, setTruthy] = useState();\n//   const [msg, setMsg] = useState(\"\");\n\n//   return (\n//     <div className=\"auth-form-container\">\n//       <div className=\"logo\">\n//         <img src={logo} alt=\"logo\" />\n//         <h1>Markata</h1>\n//       </div>\n//       <h2>Thank you for starting the activation process...</h2>\n\n//       {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\n//     </div>\n//   );\n// }\n// const UserActivateScreen = async () => {\n//   // const [truthy, setTruthy] = useState(true);\n//   // const [msg, setMsg] = useState(\"Processing.....\");\n//   // const { truthy, setTruthy } = useState(false);\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\n//   // token\n//   // let msg = \"jkl\";\n//   const location = useLocation();\n//   const searchParams = new URLSearchParams(location.search);\n//   // Access specific query parameters\n//   const token = searchParams.get(\"token\");\n//   //   setToken(receivedToken);\n//   console.log(\"Before   \" + token);\n//   try {\n//     // setTruthy(truthy ? false : true);\n//     const response = await api.get(\"/users/activate-account\", {\n//       params: {\n//         token: token,\n//       },\n//     });\n//     console.log(response);\n//     if (response.status == 200) {\n//       changePath(\"/login\");\n//     }\n//   } catch (err) {\n//     // Handle any other errors that occur outside of the API request\n//     // setTruthy(truthy ? false : true);\n//     // setMsg(err.response.data);\n//     // msg = err.response.data;\n//     console.error(\"Last error\" + err.response);\n//   }\n//   console.log(\"After   \" + token);\n\n//   //change path\n//   const navigate = useNavigate();\n//   const changePath = (path) => {\n//     setTimeout(() => {\n//       navigate(path);\n//     }, 2000);\n//   };\n\n//   return (\n//     <div className=\"auth-form-container\">\n//       <div className=\"logo\">\n//         <img src={logo} alt=\"logo\" />\n//         <h1>Markata</h1>\n//       </div>\n//       <h2>Thank you for starting the activation process...</h2>\n\n//       {/* {true ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>} */}\n//     </div>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserActivateScreen = () => {\n  _s();\n  const [msg, setMsg] = useState(\"\"); // Initialize msg as an empty string\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const token = searchParams.get(\"token\");\n  useEffect(() => {\n    async function activateAccount() {\n      try {\n        const response = await api.get(\"/users/activate-account\", {\n          params: {\n            token: token\n          }\n        });\n        // console.log(response);\n        console.log(\"No error\");\n        if (response.status === 200) {\n          changePath(\"/SuccessVerificationPage\");\n        }\n        return;\n      } catch (err) {\n        // console.log(err);\n        setMsg(err.response.data); // Set msg to the error message\n        // console.error(\"Last error\", err.response);\n      }\n    }\n\n    activateAccount(); // Call the async function when the component is mounted\n  }, [token]); // Call activateAccount whenever the token changes\n\n  const navigate = useNavigate();\n  const changePath = path => {\n    setTimeout(() => {\n      navigate(path);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Markata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account will be activated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(UserActivateScreen, \"yKMjBJEzy3sg7raTSsdKIicydrU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UserActivateScreen;\nexport default UserActivateScreen;\nvar _c;\n$RefreshReg$(_c, \"UserActivateScreen\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","api","logo","jsxDEV","_jsxDEV","UserActivateScreen","_s","msg","setMsg","location","searchParams","URLSearchParams","search","token","get","activateAccount","response","params","console","log","status","changePath","err","data","navigate","path","setTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/henos/Desktop/React code/Markata/frontend/react/src/components/UserActivateScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport api from \"../api/link\";\r\nimport logo from \"./logo.png\";\r\n\r\n// function UserActivateScreen() {\r\n//   // const { truthy, setTruthy } = useState(false);\r\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\r\n//   // token\r\n//   const location = useLocation();\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   // Access specific query parameters\r\n//   const token = searchParams.get(\"token\");\r\n//   //   setToken(receivedToken);\r\n//   console.log(\"Outside try   \" + token);\r\n//   try {\r\n//     const url = `http://localhost:8080/users/activate-account?token=${token}`;\r\n\r\n//     // api\r\n//     //   .get(url)\r\n//     //   .then(function (response) {\r\n//     //     setTruthy(false);\r\n//     //     console.log(response);\r\n//     //     console.log(\"-- \" + JSON.stringify(response) + \" --\");\r\n//     //     changePath(\"/SuccessRegistration\");\r\n//     //     return;\r\n//     //   })\r\n//     //   .catch((err) => {\r\n//     //     setTruthy(true);\r\n//     //     console.log(\"truthy \" + truthy);\r\n//     //     // setMsg(err.response.data);\r\n//     //     setMsg(err.response.data);\r\n//     //     console.log(\"msg \" + msg);\r\n//     //     console.log(`Error: ${err.response.data}`);\r\n//     //     console.log(err.response);\r\n//     //   });\r\n\r\n//     api\r\n//       .get(\"/users/activate-account\", {\r\n//         params: {\r\n//           token: token,\r\n//         },\r\n//         // token: \"http://localhost:8080/users/activate-account?token=\" + token,\r\n//         // token: token,\r\n//       })\r\n//       .then((data) => {\r\n//         setTruthy(false);\r\n//         console.log(\"This is the response: \" + data);\r\n//         // console.log(\"-- \" + JSON.stringify(data) + \" --\");\r\n//         console.log(data.status);\r\n//         if (data.status === 200) {\r\n//           changePath(\"SuccessRegistration\");\r\n//         }\r\n//         return;\r\n//       })\r\n//       .catch((err) => {\r\n//         setTruthy(true);\r\n//         console.log(\"truthy \" + truthy);\r\n//         // setMsg(err.response.data);\r\n//         setMsg(err.response.data);\r\n//         console.log(\"msg \" + msg);\r\n//         console.log(`Error: ${err.response.data}`);\r\n//         console.log(err.response);\r\n//       });\r\n//   } catch (error) {\r\n//     // Handle any other errors that occur outside of the API request\r\n//     console.error(\"Last error\" + error);\r\n//   }\r\n//   console.log(\"After try  \" + token);\r\n\r\n//   //change path\r\n//   const navigate = useNavigate();\r\n//   const changePath = (path) => {\r\n//     setTimeout(() => {\r\n//       navigate(path);\r\n//     }, 9000);\r\n//   };\r\n\r\n//   const [truthy, setTruthy] = useState();\r\n//   const [msg, setMsg] = useState(\"\");\r\n\r\n//   return (\r\n//     <div className=\"auth-form-container\">\r\n//       <div className=\"logo\">\r\n//         <img src={logo} alt=\"logo\" />\r\n//         <h1>Markata</h1>\r\n//       </div>\r\n//       <h2>Thank you for starting the activation process...</h2>\r\n\r\n//       {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\r\n//     </div>\r\n//   );\r\n// }\r\n// const UserActivateScreen = async () => {\r\n//   // const [truthy, setTruthy] = useState(true);\r\n//   // const [msg, setMsg] = useState(\"Processing.....\");\r\n//   // const { truthy, setTruthy } = useState(false);\r\n//   // const [token, setToken] = useState(\"Nati sample TOKENNNNN\")\r\n//   // token\r\n//   // let msg = \"jkl\";\r\n//   const location = useLocation();\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   // Access specific query parameters\r\n//   const token = searchParams.get(\"token\");\r\n//   //   setToken(receivedToken);\r\n//   console.log(\"Before   \" + token);\r\n//   try {\r\n//     // setTruthy(truthy ? false : true);\r\n//     const response = await api.get(\"/users/activate-account\", {\r\n//       params: {\r\n//         token: token,\r\n//       },\r\n//     });\r\n//     console.log(response);\r\n//     if (response.status == 200) {\r\n//       changePath(\"/login\");\r\n//     }\r\n//   } catch (err) {\r\n//     // Handle any other errors that occur outside of the API request\r\n//     // setTruthy(truthy ? false : true);\r\n//     // setMsg(err.response.data);\r\n//     // msg = err.response.data;\r\n//     console.error(\"Last error\" + err.response);\r\n//   }\r\n//   console.log(\"After   \" + token);\r\n\r\n//   //change path\r\n//   const navigate = useNavigate();\r\n//   const changePath = (path) => {\r\n//     setTimeout(() => {\r\n//       navigate(path);\r\n//     }, 2000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-form-container\">\r\n//       <div className=\"logo\">\r\n//         <img src={logo} alt=\"logo\" />\r\n//         <h1>Markata</h1>\r\n//       </div>\r\n//       <h2>Thank you for starting the activation process...</h2>\r\n\r\n//       {/* {true ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>} */}\r\n//     </div>\r\n//   );\r\n// };\r\nconst UserActivateScreen = () => {\r\n  const [msg, setMsg] = useState(\"\"); // Initialize msg as an empty string\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const token = searchParams.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    async function activateAccount() {\r\n      try {\r\n        const response = await api.get(\"/users/activate-account\", {\r\n          params: {\r\n            token: token,\r\n          },\r\n        });\r\n        // console.log(response);\r\n        console.log(\"No error\");\r\n        if (response.status === 200) {\r\n          changePath(\"/SuccessVerificationPage\");\r\n        }\r\n        return;\r\n      } catch (err) {\r\n        // console.log(err);\r\n        setMsg(err.response.data); // Set msg to the error message\r\n        // console.error(\"Last error\", err.response);\r\n      }\r\n    }\r\n\r\n    activateAccount(); // Call the async function when the component is mounted\r\n  }, [token]); // Call activateAccount whenever the token changes\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const changePath = (path) => {\r\n    setTimeout(() => {\r\n      navigate(path);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Markata</h1>\r\n      </div>\r\n      <h2>Account will be activated</h2>\r\n      {/* {msg && <p style={{ color: \"red\" }}>{msg}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserActivateScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,KAAK,GAAGH,YAAY,CAACI,GAAG,CAAC,OAAO,CAAC;EAEvChB,SAAS,CAAC,MAAM;IACd,eAAeiB,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACa,GAAG,CAAC,yBAAyB,EAAE;UACxDG,MAAM,EAAE;YACNJ,KAAK,EAAEA;UACT;QACF,CAAC,CAAC;QACF;QACAK,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UAC3BC,UAAU,CAAC,0BAA0B,CAAC;QACxC;QACA;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ;QACAd,MAAM,CAACc,GAAG,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;QAC3B;MACF;IACF;;IAEAR,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMW,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,UAAU,GAAII,IAAI,IAAK;IAC3BC,UAAU,CAAC,MAAM;MACfF,QAAQ,CAACC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCxB,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBxB,OAAA;QAAKyB,GAAG,EAAE3B,IAAK;QAAC4B,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B9B,OAAA;QAAAwB,QAAA,EAAI;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACN9B,OAAA;MAAAwB,QAAA,EAAI;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhDID,kBAAkB;EAAA,QAELN,WAAW,EA4BXC,WAAW;AAAA;AAAAmC,EAAA,GA9BxB9B,kBAAkB;AAkDxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}