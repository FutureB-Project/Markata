{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henos\\\\Desktop\\\\React code\\\\Markata\\\\frontend\\\\react\\\\src\\\\components\\\\LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./logo.png\";\nimport api from \"../api/link\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen(props) {\n  _s();\n  //change path\n  const navigate = useNavigate();\n  const changePath = path => {\n    // navigate to path\n    navigate(path);\n  };\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [isEmpty, setEmpty] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [truthy, setTruthy] = useState();\n  const [msg, setMsg] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(true);\n    if (!email) {\n      setEmpty(true);\n    }\n    console.log(email);\n    const post = {\n      emailId: email,\n      password: password\n    };\n    try {\n      const response = await api.post(\"/login\", post);\n      setTruthy(false);\n      console.log(\"-- \" + JSON.stringify(response) + \" --\");\n      //TODO: After successful signup user goes to home page\n      // Navigate to Home\n      if (response.status == 200) {\n        changePath(\"/\");\n      }\n    } catch (err) {\n      setTruthy(true);\n      console.log(\"truthy \" + truthy);\n      // setMsg(err.response.data);\n      setMsg(\"Error happened\");\n      console.log(\"msg \" + msg);\n      console.log(`Error: ${err.response.data}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Markata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Enter email\",\n        id: \"email\",\n        name: \"email\",\n        required: true,\n        className: isEmpty && isSubmitted ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Enter password\",\n        id: \"password\",\n        name: \"password\",\n        required: true,\n        className: isEmpty && isSubmitted ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), truthy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: `${msg}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-btn\",\n        onClick: () => changePath(\"/signup\"),\n        children: \"Signup here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginScreen, \"WgrvqnJcCFQecbUmBRz6bhncS9A=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","Link","logo","api","useNavigate","jsxDEV","_jsxDEV","LoginScreen","props","_s","navigate","changePath","path","email","setEmail","password","setPassword","isSubmitted","setSubmitted","isEmpty","setEmpty","date","setDate","truthy","setTruthy","msg","setMsg","errorEmail","setErrorEmail","handleSubmit","e","preventDefault","console","log","post","emailId","response","JSON","stringify","status","err","data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","placeholder","id","name","required","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/henos/Desktop/React code/Markata/frontend/react/src/components/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./logo.png\";\r\nimport api from \"../api/link\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginScreen(props) {\r\n  //change path\r\n  const navigate = useNavigate();\r\n\r\n  const changePath = (path) => {\r\n    // navigate to path\r\n    navigate(path);\r\n  };\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n  const [isEmpty, setEmpty] = useState(false);\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [truthy, setTruthy] = useState();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    if (!email) {\r\n      setEmpty(true);\r\n    }\r\n    console.log(email);\r\n\r\n    const post = {\r\n      emailId: email,\r\n      password: password,\r\n    };\r\n    try {\r\n      const response = await api.post(\"/login\", post);\r\n      setTruthy(false);\r\n      console.log(\"-- \" + JSON.stringify(response) + \" --\");\r\n      //TODO: After successful signup user goes to home page\r\n      // Navigate to Home\r\n      if (response.status == 200) {\r\n        changePath(\"/\");\r\n      }\r\n    } catch (err) {\r\n      setTruthy(true);\r\n      console.log(\"truthy \" + truthy);\r\n      // setMsg(err.response.data);\r\n      setMsg(\"Error happened\");\r\n      console.log(\"msg \" + msg);\r\n      console.log(`Error: ${err.response.data}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Markata</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          // style={{ border: `${errorEmail ? \"red\" : \"none\"}` }}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          required\r\n          className={isEmpty && isSubmitted ? \"error\" : \"\"}\r\n        />\r\n        {truthy ? <p style={{ color: \"red\" }}>{`${msg}`}</p> : <p></p>}\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account?{\" \"}\r\n        <span className=\"link-btn\" onClick={() => changePath(\"/signup\")}>\r\n          Signup here\r\n          {/* <Link to=\"/signup\"> Signup here </Link> */}\r\n        </span>\r\n      </p>{\" \"}\r\n      {/* <Link to=\"/cart\"> Cart </Link> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}